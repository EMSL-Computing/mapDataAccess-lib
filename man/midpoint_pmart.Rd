% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/midpoint_constructor.R
\name{midpoint_pmart}
\alias{midpoint_pmart}
\title{Generate a midpoint analysis file for pmart}
\usage{
midpoint_pmart(
  omics_data,
  tab,
  project = NULL,
  name = "exportedFromPMART",
  omics_stats = NULL,
  omics_stats_pep = NULL
)
}
\arguments{
\item{omics_data}{An omicsData object as defined in pmartR. Required.}

\item{tab}{The pmart tab the data was exported from. Acceptable entries are
"normalization_tab", "peptide_statistics_tab", "protein_rollup_tab",
and "statistics_tab". Required.}

\item{project}{A project omic object. Required.}

\item{name}{A string to indicate the name of the midpoint file. Optional.}

\item{omics_stats}{An omicsStats object as defined in pmartR. Optional.}

\item{omics_stats_pep}{A peptide omicsStats object as defined in pmartR. Optional.}
}
\value{
A midpoint pmart object
}
\description{
Possible "exit" points to generate a midpoint in pmart are
normalization, peptide statistics, peptide rollup, and statistics.
}
\examples{
\dontrun{

library(pmartR)
library(pmartRdata)

## First, let's simulate getting to the normalization tab in pmart

# Load peptide data
myPepObject <- pmartRdata::pep_object

# Log transform data
myPepObject <- edata_transform(myPepObject, "log2")

# Set group designation
myPepObject <- group_designation(myPepObject, main_effects = "Condition")

# Apply filters
myPepObject <- applyFilt(molecule_filter(myPepObject), myPepObject, min_num = 2)
myPepObject <- applyFilt(rmd_filter(myPepObject), myPepObject, pvalue_threshold = 0.0001)

# Run Normalization
myPepObject <- normalize_global(myPepObject, "all", "mean", apply_norm = TRUE)

## Now, let's simulate exporting a midpoint file at this step 

pep_midpoint <- midpoint_pmart(omics_data = myPepObject,
               tab = "normalization_tab", 
               project = project_omic(projectname = "My Peptide Data",
                                       datatype = "Peptide-level Label Free",
                                       edata = pmartRdata::pep_edata,
                                       fdata = pmartRdata::pep_fdata,
                                       emeta = pmartRdata::pep_emeta,
                                       edata_filename = "pep_edata",
                                       fdata_filename = "pep_fdata",
                                       emeta_filename = "pep_emeta")
               )
               
# Load lipidomics data 
myLipidObject <- pmartRdata::lipid_object_pos

# Log transform data
myLipidObject <- edata_transform(myLipidObject, "log2")

# Set group designation
myLipidObject <- group_designation(myLipidObject, main_effects = "Condition")

# Apply filters
myLipidObject <- applyFilt(rmd_filter(myLipidObject), myLipidObject, pvalue_threshold = 0.0001)

# Run Normalization
myLipidObject <- normalize_global(myLipidObject, "all", "mean", apply_norm = TRUE)

lipid_midpoint <- midpoint_pmart(omics_data = myLipidObject,
                  tab = "normalization_tab", 
                  project = project_omic(projectname = "My Lipid Data",
                                          datatype = "Lipidomics-Positive",
                                          edata = pmartRdata::lipid_edata_pos,
                                          fdata = pmartRdata::lipid_fdata_pos,
                                          emeta = NULL,
                                          edata_filename = "lipid_edata_pos",
                                          fdata_filename = "lipid_fdata_pos",
                                          emeta_filename = NULL)
               )


}
}
